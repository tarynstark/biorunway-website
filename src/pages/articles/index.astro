---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import ArticleCard from '../../components/article/ArticleCard.tsx';

// Get all articles and sort by published date
const articles = await getCollection('articles');
const sortedArticles = articles.sort((a, b) => 
  new Date(b.data.publishedAt).getTime() - new Date(a.data.publishedAt).getTime()
);

// Categories with descriptions and counts
const categories = [
  {
    id: 'all',
    name: 'All Articles',
    description: 'Latest coverage across all biotech fashion topics',
    count: articles.length
  },
  {
    id: 'products',
    name: 'Products',
    description: 'New materials, commercial launches, product reviews',
    count: articles.filter(article => article.data.category === 'products').length
  },
  {
    id: 'research',
    name: 'Research and development',
    description: 'Scientific breakthroughs, lab innovations, academic partnerships',
    count: articles.filter(article => article.data.category === 'research').length
  },
  {
    id: 'sustainability',
    name: 'Sustainability',
    description: 'Environmental impact, circular economy, eco-innovations',
    count: articles.filter(article => article.data.category === 'sustainability').length
  },
  {
    id: 'deep-dive',
    name: 'Deep dive',
    description: 'Comprehensive analysis, industry reports, explainer content',
    count: articles.filter(article => article.data.category === 'deep-dive').length
  },
  {
    id: 'investment',
    name: 'Investment news',
    description: 'Funding rounds, IPOs, market analysis, company valuations',
    count: articles.filter(article => article.data.category === 'investment').length
  }
];
---

<BaseLayout 
  title="BioRunway latest articles" 
  description="Find the latest news on BioRunway for all biotech and fashion"
>
  <div class="container mx-auto px-4 py-16">
    <div class="max-w-6xl mx-auto">
      
      <!-- Hero Section -->
      <div class="text-center mb-16">
        <h1 class="text-4xl md:text-5xl font-bold text-brand-main-burgundy mb-6">Latest Articles</h1>
        <p class="text-xl text-biorunway-700 max-w-3xl mx-auto leading-relaxed">
          A look into biotech fashion's latest innovations and industry news
        </p>
      </div>

      <!-- Category Filters -->
      <section class="mb-12">
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
          {categories.map((category) => (
            <button 
              class={`p-4 rounded-lg border transition-colors text-left ${
                category.id === 'all' 
                  ? 'bg-brand-main-burgundy text-brand-light border-brand-main-burgundy' 
                  : 'bg-brand-light border-biorunway-300 text-biorunway-700 hover:bg-biorunway-50'
              }`}
              data-category={category.id}
            >
              <div class="flex justify-between items-start mb-2">
                <h3 class="font-semibold">{category.name}</h3>
                <span class={`text-sm px-2 py-1 rounded-full ${
                  category.id === 'all' 
                    ? 'bg-burgundy-700 text-brand-light' 
                    : 'bg-biorunway-200 text-biorunway-700'
                }`}>
                  {category.count}
                </span>
              </div>
              <p class={`text-sm ${
                category.id === 'all' 
                  ? 'text-burgundy-100' 
                  : 'text-biorunway-600'
              }`}>
                {category.description}
              </p>
            </button>
          ))}
        </div>
      </section>

      <!-- Active Category Display -->
      <section class="mb-8">
        <div id="category-info" class="text-center">
          <h2 class="text-2xl font-bold text-biorunway-900 mb-2">All Articles</h2>
          <p class="text-biorunway-600" id="category-description">Latest coverage across all biotech fashion topics</p>
        </div>
      </section>

      <!-- Articles Grid -->
      <section>
        <div id="articles-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {sortedArticles.map((article) => (
            <div class="article-item" data-category={article.data.category}>
              <ArticleCard
                title={article.data.title}
                excerpt={article.data.excerpt}
                category={article.data.category}
                author={article.data.author}
                publishedAt={article.data.publishedAt.toISOString()}
                featuredImage={article.data.featuredImage}
                slug={article.slug}
                isPaid={article.data.isPaid}
                client:load
              />
            </div>
          ))}
        </div>
        
        {/* No articles message */}
        <div id="no-articles" class="hidden text-center py-16">
          <div class="w-24 h-24 bg-biorunway-200 rounded-full mx-auto mb-6 flex items-center justify-center">
            <svg class="w-12 h-12 text-biorunway-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-biorunway-900 mb-4">No Articles Found</h3>
          <p class="text-lg text-biorunway-600 max-w-2xl mx-auto">
            We haven't published articles in this category yet. Check back soon or explore other categories.
          </p>
        </div>
      </section>

    </div>
  </div>
</BaseLayout>

<script>
  // Category filtering functionality
  const categoryButtons = document.querySelectorAll('[data-category]');
  const articleItems = document.querySelectorAll('.article-item');
  const noArticlesMessage = document.getElementById('no-articles');
  const categoryTitle = document.querySelector('#category-info h2');
  const categoryDescription = document.getElementById('category-description');
  
  // Category data for updating descriptions
  const categoryData = {
    'all': {
      name: 'All Articles',
      description: 'Latest coverage across all biotech fashion topics'
    },
    'products': {
      name: 'Products',
      description: 'New materials, commercial launches, product reviews'
    },
    'research': {
      name: 'Research and Development',
      description: 'Scientific breakthroughs, lab innovations, academic partnerships'
    },
    'sustainability': {
      name: 'Sustainability',
      description: 'Environmental impact, circular economy, eco-innovations'
    },
    'deep-dive': {
      name: 'Deep Dive',
      description: 'Comprehensive analysis, industry reports, explainer content'
    },
    'investment': {
      name: 'Investment News',
      description: 'Funding rounds, IPOs, market analysis, company valuations'
    }
  };

  categoryButtons.forEach(button => {
    button.addEventListener('click', () => {
      const selectedCategory = button.dataset.category;
      
      // Update button states
      categoryButtons.forEach(btn => {
        if (btn.dataset.category === selectedCategory) {
          btn.className = btn.className.replace(
            'bg-brand-light border-biorunway-300 text-biorunway-700 hover:bg-biorunway-50',
            'bg-brand-main-burgundy text-brand-light border-brand-main-burgundy'
          );
          // Update count badge color
          const badge = btn.querySelector('span');
          if (badge) {
            badge.className = badge.className.replace(
              'bg-biorunway-200 text-biorunway-700',
              'bg-burgundy-700 text-brand-light'
            );
          }
          // Update description color
          const desc = btn.querySelector('p');
          if (desc) {
            desc.className = desc.className.replace(
              'text-biorunway-600',
              'text-burgundy-100'
            );
          }
        } else {
          btn.className = btn.className.replace(
            'bg-brand-main-burgundy text-brand-light border-brand-main-burgundy',
            'bg-brand-light border-biorunway-300 text-biorunway-700 hover:bg-biorunway-50'
          );
          // Update count badge color
          const badge = btn.querySelector('span');
          if (badge) {
            badge.className = badge.className.replace(
              'bg-burgundy-700 text-brand-light',
              'bg-biorunway-200 text-biorunway-700'
            );
          }
          // Update description color
          const desc = btn.querySelector('p');
          if (desc) {
            desc.className = desc.className.replace(
              'text-burgundy-100',
              'text-biorunway-600'
            );
          }
        }
      });
      
      // Update category info
      if (categoryData[selectedCategory]) {
        categoryTitle.textContent = categoryData[selectedCategory].name;
        categoryDescription.textContent = categoryData[selectedCategory].description;
      }
      
      // Filter articles
      let visibleCount = 0;
      articleItems.forEach(item => {
        const itemCategory = item.dataset.category;
        if (selectedCategory === 'all' || itemCategory === selectedCategory) {
          item.style.display = 'block';
          visibleCount++;
        } else {
          item.style.display = 'none';
        }
      });
      
      // Show/hide no articles message
      if (visibleCount === 0) {
        noArticlesMessage.classList.remove('hidden');
      } else {
        noArticlesMessage.classList.add('hidden');
      }
    });
  });
</script>