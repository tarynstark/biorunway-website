---
// Header component with simplified navigation overlay
export interface Props {
  variant?: 'light' | 'dark';
}

const { variant = 'light' } = Astro.props;

// Determine page type by checking the URL
const currentPath = Astro.url.pathname;
const isIndividualArticlePage = currentPath.startsWith('/articles/') && currentPath !== '/articles/' && currentPath !== '/articles';

// Use dark variant for individual article pages (light background), light variant for homepage and articles index (dark background)
const logoVariant = isIndividualArticlePage ? 'dark' : 'light';
const logoSrc = `/images/logos/Biorunway Logo ${logoVariant === 'light' ? 'Light' : 'Dark'}.svg`;

// Text colors based on page type
const textColorClasses = isIndividualArticlePage 
  ? 'text-au-chico-900 hover:text-au-chico-700' // Dark text for light backgrounds (individual articles)
  : 'text-au-chico-100 hover:text-au-chico-50';  // Light text for dark backgrounds (homepage, articles index)
---

<header class="absolute top-0 left-0 right-0 z-50">
  <div class="max-w-[1100px] mx-auto px-10 py-3">
    <nav class="flex items-center justify-between">
      <!-- Logo -->
      <a href="/" class="flex items-center gap-2">
        <!-- BioRunway Logo -->
        <img 
          src={logoSrc}
          alt="BioRunway" 
          width="164" 
          height="32"
          class="h-8 w-auto"
        />
      </a>
      
      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center gap-4">
        <a href="/about/" class={`px-0 py-3 text-[14px] font-semibold uppercase leading-6 transition-colors ${textColorClasses}`}>
          About
        </a>
        <a href="/glossary/" class={`px-0 py-3 text-[14px] font-semibold uppercase leading-6 transition-colors ${textColorClasses}`}>
          Glossary
        </a>
        <a href="/articles/" class={`px-0 py-3 text-[14px] font-semibold uppercase leading-6 transition-colors ${textColorClasses}`}>
          Articles
        </a>
      </div>
      
      <!-- Mobile Menu Button -->
      <button 
        class={`md:hidden transition-colors ${textColorClasses}`}
        aria-label="Toggle mobile menu"
        id="mobile-menu-button"
      >
        <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 32 32" id="menu-icon">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 13h24M4 19h24" />
        </svg>
        <!-- Close Icon (Hidden by default) -->
        <svg class="w-8 h-8 hidden" fill="none" stroke="currentColor" viewBox="0 0 32 32" id="close-icon">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 6l20 20M6 26L26 6" />
        </svg>
      </button>
    </nav>
  </div>
  
  <!-- Mobile Navigation Overlay -->
  <div class="md:hidden fixed inset-0 z-40 hidden" id="mobile-overlay">
    <!-- Background Overlay -->
    <div class="absolute inset-0 bg-cod-gray-950 opacity-12"></div>
    
    <!-- Mobile Menu Panel -->
    <div class="relative bg-au-chico-950 flex flex-col">
      <!-- Mobile Header - Match exact positioning of main header -->
      <div class="h-auto overflow-hidden flex justify-center items-center">
        <div class="max-w-[1100px] mx-auto px-10 py-3 w-full">
          <nav class="flex items-center justify-between">
            <!-- Logo - Exact same positioning as main header -->
            <a href="/" class="flex items-center gap-2">
              <img 
                src="/images/logos/Biorunway Logo Light.svg" 
                alt="BioRunway" 
                width="164" 
                height="32"
                class="h-8 w-auto"
              />
            </a>
            
            <!-- Close Button -->
            <button 
              class="w-8 h-8 text-au-chico-50 hover:text-au-chico-100 transition-colors"
              aria-label="Close mobile menu"
              id="mobile-close-button"
            >
              <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 32 32">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 6l20 20M6 26L26 6" />
              </svg>
            </button>
          </nav>
        </div>
      </div>
      
      <!-- Mobile Navigation Links -->
      <div class="self-stretch px-4 py-6 flex flex-col justify-center items-center gap-8">
        <div class="py-3 overflow-hidden flex flex-col justify-start items-start gap-2">
          <a href="/about/" class="self-stretch text-au-chico-100 text-[14px] font-inter font-semibold uppercase leading-6 hover:text-au-chico-50 transition-colors">
            About
          </a>
        </div>
        <div class="py-3 overflow-hidden flex flex-col justify-start items-start gap-2">
          <a href="/glossary/" class="self-stretch text-au-chico-100 text-[14px] font-inter font-semibold uppercase leading-6 hover:text-au-chico-50 transition-colors">
            Glossary
          </a>
        </div>
        <div class="py-3 overflow-hidden flex flex-col justify-start items-start gap-2">
          <a href="/articles/" class="self-stretch text-au-chico-100 text-[14px] font-inter font-semibold uppercase leading-6 hover:text-au-chico-50 transition-colors">
            Articles
          </a>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle functionality
  const menuButton = document.getElementById('mobile-menu-button');
  const closeButton = document.getElementById('mobile-close-button');
  const overlay = document.getElementById('mobile-overlay');
  const body = document.body;

  function openMobileMenu() {
    overlay?.classList.remove('hidden');
    body.classList.add('overflow-hidden'); // Prevent scrolling when menu is open
  }

  function closeMobileMenu() {
    overlay?.classList.add('hidden');
    body.classList.remove('overflow-hidden');
  }

  // Open menu when hamburger button is clicked
  menuButton?.addEventListener('click', openMobileMenu);

  // Close menu when close button is clicked
  closeButton?.addEventListener('click', closeMobileMenu);

  // Close menu when clicking on the background overlay
  overlay?.addEventListener('click', (e) => {
    if (e.target === overlay) {
      closeMobileMenu();
    }
  });

  // Close menu when pressing escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && !overlay?.classList.contains('hidden')) {
      closeMobileMenu();
    }
  });

  // Close menu when clicking on navigation links
  const navLinks = overlay?.querySelectorAll('a');
  navLinks?.forEach(link => {
    link.addEventListener('click', closeMobileMenu);
  });
</script>